一、常用功能
clear x %删除x
clear   %删除所有
help + 函数名 %查找函数帮助文档
lookfor + 关键词 %查找含关键字的函数

二、常用矩阵
x=[1 2 3] %行向量
x=[1;2;3] x=[1 2 3
             4 5 6]%列向量
>>x=[0:2]
x =
     0     1     2

>> x=[0:2]'
x =
     0
     1
     2

>> x=[0:0.5:2] %0-2步长为0.5
x =
         0    0.5000    1.0000    1.5000    2.0000

>> x=linspace(0,2,5) %0到2内等距五个数
x =
         0    0.5000    1.0000    1.5000    2.0000
        
>> x=zeros(2,3) %2x3的零矩阵
x =
     0     0     0
     0     0     0

>> y=ones(2) %2x2值为1的矩阵
y =
     1     1
     1     1

>> x=eye(2)  %2x2的单位矩阵
x =
     1     0
     0     1

三、固定变量
>> pi
ans =
    3.1416
  
>> z=i  %复数
z =
   0.0000 + 1.0000i

>> x=1/0  %无穷大
x =
   Inf
   
>> 0/0   %not a number
ans =
   NaN
   
四、矩阵运算和数组运算
>> a=[1 2 3;4 5 6;7 8 9];
>> b=[1 3 5;6 9 0;2 4 6];
>> C=a+b %加
C =
     2     5     8
    10    14     6
     9    12    15
>> D=a-b
D =
     0    -1    -2
    -2    -4     6
     5     4     3
>> E=a*b  %乘
E =
    19    33    23
    46    81    56
    73   129    89
>> F=a.*b %对应位置相乘
F =
     1     6    15
    24    45     0
    14    32    54
>> G=a/b  %除法
G =
         0         0    0.5000
   -3.0000   -0.0000    3.5000
   -6.0000   -0.0000    6.5000
>> H=a./b   %对应位置相除
H =
    1.0000    0.6667    0.6000
    0.6667    0.5556       Inf
    3.5000    2.0000    1.5000
>> I=a^2
I =
    30    36    42
    66    81    96
   102   126   150
>> I=a.^2 %点次方
I =
     1     4     9
    16    25    36
    49    64    81
x=a(1,3) %取值
赋值
a(1,3)=0 %赋值
a(2,:)=[6 5 4] %赋值一行
a(1:2,1:2)=[0,0;0,0] %左上角赋值
比较
>>x=[1 2 3 4 5 6 7 8 9];
>>y=[1 4 3 8 6 5 7 2 9];
>>eq=(x==y)  %1逻辑数组
eq=1   0   1   0   0   0   1   0   1
>>xy=(x>5)&(y<7)     %且
>>xoy=(x>5)|(y>7)    %或
>>xory=xor(x>5,y<7)  %非
>>x(x<0)=0     % 把x中小于0的赋值为0
>>y(y(:,1)<0,:)=0    % y(:,1)表示第一列 表示将y的第一列中小于0的那一行赋值为0
操作函数
>>flipud(A) %上下旋转
>>fliplr(A) %左右旋转
>>rot90(A)  %逆时针旋转90°
>>sum(A)    %求和,二维数组按列相加
>>sum(A,2)  %按行相加
>>sum(b(:)) %全部求和
>>max(A)   %二维按列取大值 等价于max(A,[],1)
>>max(A,2) %一维与2比较取大值
>>max(A,[],2)%二维按行取最大值
>>x=0:pi/6:pi; %0-pi 步长为6
>>y=sin(x)  %cos tan cot asin acos atan acot 同
>>abs(x) %取绝对值
>>sqrt(y) %开根号
>>x=[-1.6 -0.2 1.2 0.6];
>>ceil(x) %向上取整      -1  0  2  1
>>floor(x) %向下取整     -2 -1  1  0
>>fix(x)  %向0取整       -1  0  1  0
>>round(x) %四舍五入取整  -2  0  1  1 

基本语句
例（1）：1~10求奇数和
x=0;
for i=1:10
    if mod(i,2) %取余
        x=x+i;
    end
end

例(2):作图%正余弦
x=-2*pi:0.1:2*pi;
y1=sin(x);
y2=cos(x);
plot(x,y1,'-b');
hold on
plot(x,y2,'-r');
xlabel('x');
ylabel('y');
text(0,0,'(0,0）');
legend('sin x','cos x');
title('正余弦');
曲线图plot:plot(x,y);plot(x,y,s),plot(x1,y1,s1,x2,y2,s2,...)
b blue      . point       v triangle(down)      -   solid
g green     o circle      ^ triangle(up)        :   dotted
r red       x x-mark      < triangle(left)      -.  dashdot
c cyan      + plse        > triangle(right)     --  dashed
m magenta   * star        p pentagram           (none) no line
y yellow    s square      h hexagram
k black     d diamond
w white     
坐标范围 axis([-20,20,-20,15]); %x范围-20~20  y范围-20~15 xlim([-20,20])
grid on/grid off/grid minor %网格
对数 loglog, semilogx
极坐标 polar
三维plot3(x,y,z)
三维曲面图 meshgrid
[x,y]=meshgrid(-pi:0.1:pi);
z=sin(x).*cos(y);
mesh(x,y,z);  %meshc(x,y,z)
surf(x,y,z);  %surfc(x,y,z)
M函数格式
function[output 1,..]=functionname(input,..)
例： function area=rectarea(L,W) %求矩形面积

例：多体问题
考虑多个天体的系统（如日地月），求各个天体的运动规律。
天体间的距离远大于天体的尺寸，所有天体都视为质点。
每个天体有固定质量，并给出初始位置和初始速度。
任意两天体之间只有万有引力的最用，F=Gmm/r^2（矢量）
代码：
G=6.67e-11;%科学记数法
dt=24*3600;%时间间隔为一天
N=3;       %三个天体
M=[sun.mass;earth.mass;moon.mass];  % N X 1  质量
R=[sun.position;earth.position;moon.position];  %N X 3  位置
V=[sun.velocity;earth.velocity;moon.velocity];  %N X 3  速度
for t=1:365
  F=zeros(N,3);  % N行三列  F(i,:)=[fx,fy,fz]
  for i=1:N
    mi=M(i);ri=R(i,:);    %i天体的质量和位置
    for j=(i+1):N;
      mj=M(j);rj=R(j,:);  %j天体的质量和位置
      rij=rj-ri;          %判断距离，相对位置
      fij=G*mi*mj./(norm(rij).^3).*rij;  %力
      F([i,j],:)=F([i,j],:)+[fij;-fij];  %作用力相加
    end
  end
  V=V+F./repmat(M,1,3)*dt;  %v(t+dt)=v(t)+a(t+dt)dt
  R=R+V*dt;                 %r(t+dt)=r(t)+v(t+dt)dt
end
作图
function SunEarthMoon   % M函数文件

load planets;   % 将planets.mat中的变量mass、position、velocity加载过来

[sun, earth, moon] = deal(18, 3, 25);   % sun、earth、moon分别是18、3、25行
list = [sun, earth, moon];  % 1行3列矩阵
G = 6.67e-11; % gravitational constant

dt = 24*3600;   % 作图的时间间隔为一天，每天有24*3600秒
N = length(list);   % N=3，三个天体
mass = mass(list);  % N行1列矩阵，N个天体的质量
position = position(list,:);    % N行3列矩阵，N个天体的坐标，坐标是1行3列的行向量，三个方向的分量
velocity = velocity(list,:);    % N行3列矩阵，N个天体的速度，速度是1行3列的行向量，三个方向的分量
h = plotplanets(position);  %作图函数

for t = 1:365   % 图中总时间为一年，一年365天
    plotplanets(position,h);    % 
    force = zeros(N,3); % N行3列零矩阵，一行表示某个天体在三个方向上的受力
    for i = 1 : N   % 遍历计算各天体间的万有引力。组合数C（3，2）
        Pi = position(i,:); % 某天体坐标
        Mi = mass(i);   % 某天体质量
        for j = (i+1):N     %the i+1 is to create diagonal 
            Mj = mass(j);   % 另一天体质量
            Pj = position(j,:); % 另一天体坐标
            dr =  Pj - Pi;  % 两天体的相对，1行3列矩阵
            forceij = G*Mi*Mj./(norm(dr).^3).*dr;   % 两天体之间的力，1行3列的向量
            force([i,j],:) = force([i,j],:)+[forceij; -forceij];
        end
    end
    velocity = velocity + force ./ repmat(mass,1,3)*dt;   % v=v+a*dt a=F/m
    position = position + velocity*dt;  % r=r+v*dt
end 

% -------------------------------------------------------------------------

function h = plotplanets(pos,h) % 
scale = 50;
total_planets = size(pos,1);
[sun, earth, moon] = deal(1, 2, 3);
radius = [50, 30, 20];
marker = {'.r', 'b.','m.'};
pos(moon,:) = pos(earth,:) + scale*(pos(moon,:)-pos(earth,:));
if nargin==1
    hold on; axis image
    axis( [-2 2 -2 2]*1e11 );
    for i = 1:total_planets
        if any(i == [sun, earth, moon])
            h(i) = plot(pos(i,1),pos(i,2),marker{i},'markersize',radius(i));
            plot(pos(i,1), pos(i,2), marker{i}, 'markersize',5);
        else
            h(i) = plot(pos(i,1), pos(i,2), 'k.', 'markersize', 20);
            plot(pos(i,1), pos(i,2), 'k.', 'markersize',5);
        end
    end
else
    for i = 1:total_planets
        set(h(i), 'Xdata', pos(i,1)  , 'Ydata', pos(i,2)  )
        if any(i == [sun, earth, moon])
            plot(pos(i,1), pos(i,2), marker{i}, 'markersize',5);
        else
            plot(pos(i,1), pos(i,2), 'k.', 'markersize',5);
        end
    end
    drawnow
end
